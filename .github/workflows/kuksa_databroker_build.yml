# /********************************************************************************
# * Copyright (c) 2022 Contributors to the Eclipse Foundation
# *
# * See the NOTICE file(s) distributed with this work for additional
# * information regarding copyright ownership.
# *
# * This program and the accompanying materials are made available under the
# * terms of the Apache License 2.0 which is available at
# * http://www.apache.org/licenses/LICENSE-2.0
# *
# * SPDX-License-Identifier: Apache-2.0
# ********************************************************************************/

name: kuksa_databroker_build

on:
  pull_request:
    paths:
      - ".github/workflows/kuksa_databroker_build.yml"
      - "kuksa_databroker/**"
      - "Cargo.*"
      - "Cross.toml"
  workflow_call:
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: cargo fmt
        working-directory: ${{github.workspace}}
        run: cargo fmt -- --check
      - name: cargo clippy
        working-directory: ${{github.workspace}}
        run: cargo clippy --all-targets -- -W warnings -D warnings

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/install@v0.1
        with:
          crate: cargo-tarpaulin
          version: latest

      - uses: actions-rs/install@v0.1
        with:
          crate: cross
          version: latest

      - uses: actions-rs/install@v0.1
        with:
          crate: cargo-strip
          version: latest

      - uses: actions-rs/install@v0.1
        with:
          crate: cargo2junit
          version: latest

      - name: Run Tests
        working-directory: ${{github.workspace}}
        run: |
          cargo test --all-targets -- -Z unstable-options --report-time --format json | cargo2junit > results.xml;

      # - name: Publish test results as PR comment
      #   uses: EnricoMi/publish-unit-test-result-action@v1
      #   if: github.event_name == 'pull_request'
      #   with:
      #     check_name: Test Results
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     files: results.xml

      - name: Upload testing report
        uses: actions/upload-artifact@v3
        with:
          name: Unit test results
          path: results.xml

      - name: Run code coverage
        run: |
          cargo tarpaulin -o Xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: Code coverage report
          path: cobertura.xml

      # - name: Publish coverage report as comment
      #   uses: 5monkeys/cobertura-action@v12
      #   if: github.event_name == 'pull_request'
      #   with:
      #     path: cobertura.xml
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     minimum_coverage: 40

  build-x86_64:
    name: Build (x86_64)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build release (stripped)
        working-directory: ${{github.workspace}}/kuksa_databroker
        run: RUSTFLAGS='-C link-arg=-s' cargo build --release --bins --examples

      - name: Tar files
        shell: bash
        working-directory: ${{github.workspace}}
        run: |
          tar -czvf databroker_x86_64.tar.gz \
          target/release/databroker-cli \
          target/release/databroker \
          target/release/examples/perf_setter \
          target/release/examples/perf_subscriber

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: databroker_x86_64.tar.gz
          path: ${{github.workspace}}/databroker_x86_64.tar.gz
          if-no-files-found: error

  build-aarch64:
    name: Build (aarch64)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install build tools
        run: cargo install cross

      - name: Build release (stripped)
        working-directory: ${{github.workspace}}/kuksa_databroker
        run: RUSTFLAGS='-C link-arg=-s' cross build --release --bins --examples --target aarch64-unknown-linux-gnu

      - name: Tar files
        shell: bash
        working-directory: ${{github.workspace}}
        run: |
          tar -czvf databroker_aarch64.tar.gz \
          target/aarch64-unknown-linux-gnu/release/databroker-cli \
          target/aarch64-unknown-linux-gnu/release/databroker \
          target/aarch64-unknown-linux-gnu/release/examples/perf_setter \
          target/aarch64-unknown-linux-gnu/release/examples/perf_subscriber

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: databroker_aarch64.tar.gz
          path: ${{github.workspace}}/databroker_aarch64.tar.gz
          if-no-files-found: error

  build-databroker-image:
    name: "Build multi-arch image (databroker)"
    runs-on: ubuntu-latest
    needs: [build-x86_64, build-aarch64]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Retrieve build binaries
        uses: actions/download-artifact@v3
        with:
          path: ${{github.workspace}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: "Create container image"
        id: image_build
        uses: docker/build-push-action@v2
        with:
          pull: true
          push: false
          outputs: |
            type=oci,dest=./databroker-oci-multiarch.tar
          context: .
          file: ./kuksa_databroker/Dockerfile
          platforms: linux/amd64, linux/arm64
          tags: ${{ github.sha }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}

      - name: Save container image (multiarch)
        uses: actions/upload-artifact@v3
        with:
          name: databroker-oci-multiarch.tar
          path: ${{github.workspace}}/databroker-oci-multiarch.tar
          retention-days: 1

  integration-test:
    name: Run integration test
    runs-on: ubuntu-latest
    needs: [build-databroker-image]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Retrieve saved container image
        uses: actions/download-artifact@v3
        with:
          name: databroker-oci-multiarch.tar
          path: ${{github.workspace}}

      - name: Load image
        shell: bash
        run: |
          skopeo copy oci-archive:databroker-oci-multiarch.tar docker-daemon:databroker:integration_test

      - name: Run integration test
        env:
          DATABROKER_IMAGE: databroker:integration_test
        run: ${{github.workspace}}/kuksa_databroker/integration_test/run.sh
