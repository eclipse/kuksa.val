
name: Extract from OCI image
description: Can copy files out of an OCI image

inputs:
  platform:
    required: true
    type: choice
    description: Choose platform, e.g. linux/arm64
    options:
      - linux/arm64
      - linux/amd64
      - linux/riscv64
  image:
    required: true
    type: string
    description: The OCI image
  src:
    required: true
    type: string
    description: Path inside container
  id:
    required: true
    type: string
    description: |
      This will be the name of the temporary container, making sure we do not leave any stale containers around
      (we try deleting and before and after running this, so we can recover should a workflow for a given id fail before cleaning up)
      Will be used for artifact name (if export=true) and to identify
      This will also be created as directory in cwd.
      !No special characters allowed "/" !
  export:
    required: false
    default: false
    description: Archive dest and export as Action artifact
  transform:
    required: false
    description: Optionally applying chosen --transform to tar when export is set to true


runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        mkdir -p ${{ inputs.id }}
        docker rm ${{ inputs.id }} || true
        docker create --name ${{ inputs.id }} --platform  ${{ inputs.platform }}  ${{ inputs.image }}
        docker cp ${{ inputs.id }}:${{ inputs.src }} ${{ inputs.id }}
        docker rm ${{ inputs.id }}


    - if: inputs.export == 'true'
      shell: bash
      run: tar -czf ${{ inputs.id }}.tar.gz -C ${{ inputs.id }} --transform "${{ inputs.transform }}"  .

    - if: inputs.export == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.id }}
        path: ${{ inputs.id }}.tar.gz
